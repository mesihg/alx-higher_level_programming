``3-say_my_name`` module
=======================

Using ``say_my_name``
=====================


``say_my_name(first_name, last_name="")`` prints full-name.
  First import ``say_my_name`` from the ``3-say_my_name`` module:

Import the function from the module:
    >>> say_my_name = __import__("3-say_my_name").say_my_name

Testing with given first_name and last_name:
    >>> say_my_name("Messih", "Grmay")
    My name is Messih Grmay

Testing with first_name as a number and valid last_name:
    >>> say_my_name(2, "Grmay")
    Traceback (most recent call last):
    TypeError: first_name must be a string

Testing with valid first_name and last_name as a number:
    >>> say_my_name("Messih", 5)
    Traceback (most recent call last):
    TypeError: last_name must be a string

Testing with valid first_name and with no last_name:
    >>> say_my_name("Messih")
    My name is Messih 

Testing with empty first_name and last_name input:
    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Testing with first_name list and last_name:
    >>> say_my_name(["Messih", "Abebe", "Grmay"], "Grmay")
    Traceback (most recent call last):
    TypeError: first_name must be a string


Testing with None argument:
    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string
