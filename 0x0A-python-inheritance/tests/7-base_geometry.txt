``7-base_geometry`` module
=======================

Using ``BaseGeometry class``
=====================

Import the class from the module:
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry


Testing docstring for the module:
    >>> bg = __import__("7-base_geometry").__doc__
    >>> len(bg) > 1
    True

Testing docstring for the class:
    >>> bg = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(bg) > 1
    True


Testing with positive number:
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented


Testing with positive number:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("test", 30)
    

Testing with negative number:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("test", -5)
    Traceback (most recent call last):
    ValueError: test must be greater than 0

Testing with float number:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("test", 2.5)
    Traceback (most recent call last):
    TypeError: test must be an integer
    

Testing with non-integer number:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("test", "4")
    Traceback (most recent call last):
    TypeError: test must be an integer


Testing with non-integer number:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("test", "a")
    Traceback (most recent call last):
    TypeError: test must be an integer

Testing with no input:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
